ocal Functions = {}
local TS = game:GetService("TweenService")
local function emitParticles()
	function Functions.EnchanterAttack(Attacker, Enemy, Distance)
	local Ball = game.ServerStorage.Storage.SoldierThings.MagicBall2
	for _, child in Ball:GetChildren() do
		if child:IsA("ParticleEmitter") then
			child:Emit(25)
			child.CFrame = Attacker["Right Arm"].CFrame
			child.Parent = Attacker
			end		
		end	
	end
end







-- Group anims
local Anims =
{
		["Peasant"] = {17453015983, 17453015983};
		["PeasantOreForaging"] = 17453148112;
		["PeasantTreeForaging"] = 17453148112;
	["PeasantWheatForaging"] = 13924863409;
	["Swordsman"] = {15280196869, 15280200028};
		["Archer"] = {17468048685};
		["Enchanter"] = {17453003895};
		["Knight"] = {17388205029, 17388327281};
		["Hunter"] = {17452980374, 17453003895};
	["Marksman"] = {13927976308};
		["Ranger"] = {17467761478, 17467843810};
		["Sorcerer"] = {17453481744};
		["Druid"] = {17453481744};
		["Paladin"] = {17388205029, 17388327281};
		["Templar"] = {17388205029, 17388327281, 17388205029};
	["Huntsman"] = {13928041000, 13928042480, 13928044386};
	["Cavalier"] = {13928048177};
	["Sharpshooter"] = {13928052024};
	["Assassin"] = {13928058298, 13928064366};
	["Rider"] = {13928066977, 13928077201, 13928079846};
	["Pyromancer"] = {13928083509, 15398097300};
	["Warlock"] = {13928099815, 13928109303, 13928110563};
	["Archmage"] = {13928117486, 13928119136, 13928120460, 13928122340};
		["Shaman"] = {17453026825, 13928129218, 13928130808};
	["Scholar"] = {13928138601, 13928139415, 13928140526};
}

if game.PlaceId == 1318497805 then -- Tetsing place
	Anims = {
	["Peasant"] = {13924854492, 13924858364};
	["PeasantOreForaging"] = 13947488132;
	["PeasantTreeForaging"] = 13924863409;
	["PeasantWheatForaging"] = 01526280498;
	["Swordsman"] = {01764171548, 01892573027};
	["Archer"] = {1764625900};
	["Enchanter"] = {1770871095};
		["Knight"] = {1794290912, 1788245321};
	["Hunter"] = {1775874518, 1775840435};
	["Marksman"] = {01776939180};
	["Ranger"] = {01777069255, 01893108037};
	["Sorcerer"] = {01777459741};
	["Druid"] = {1787490082};
	["Paladin"] = {1787993250, 1788245321};
	["Templar"] = {1794290912, 1800187501, 01801659398};
	["Huntsman"] = {1809032183, 1809084346, 1809293707};
	["Cavalier"] = {1822665881};
	["Sharpshooter"] = {1823275620};
	["Assassin"] = {1825261932, 1825301782};
	["Rider"] = {1830567562, 1830632922, 1830638497};
	["Pyromancer"] = {1831577623, 1831631051};
	["Warlock"] = {1835086093, 1839662711, 1839693068};
	["Archmage"] = {1846111650, 1846159173, 1846835962, 1847089857};
	["Shaman"] = {1850714461, 1850786609, 1851072993};
	["Scholar"] = {1855933796, 1855983090, 1856014917};
	}
end
------------
local GoblinArcherAttackAnims = {{15289828270, 16211041, 2.06 - 0.03, 8}}
local GoblinAttackAnims = {{18435856287, 757784818, 0.5, 7}, {15289763390, 757784818, 0.5, 3}}
local GoblinChiefAttackAnims = {15279805751, 15279828622, 15279835680}
local OrcAttackAnims = {{15280196869, 453318900, 1, 8}}
local UrukhaiAttackAnims = {13926218440, 13926222865, 13926228291}
local VolatileAttackAnims = {15280983399, 15280986227, 15281030918}
local FrostbiteUrukAttackAnims = {13926218440, 13926222865, 13926228291}
local OgreAttackAnims = {13926250600, 13926252043, 13926254496, 13926256781, 13926258779}


if game.PlaceId == 1318497805 then -- If it's test place, we use these anims
	GoblinArcherAttackAnims = {{1165077235, 16211041, 1.3 - 0.03, 8}}
	GoblinAttackAnims = {{1330306576, 757784818, 0.5, 7}, {01608318190, 757784818, 0.5, 3}}
    GoblinChiefAttackAnims = {15279805751, 15279828622, 15279835680}
	OrcAttackAnims = {{1164316774, 453318900, 1, 8}}
	UrukhaiAttackAnims = {1330467464, 1330484542, 1330535514}
	OgreAttackAnims = {2423210014, 2427233189, 2426801618, 2426932569, 2427118140}
end







-- Peasant
function Functions.PeasantAttack(Attacker, Enemy)
	if Enemy:IsDescendantOf(game.Workspace.Resources) or Enemy:FindFirstChild("Stalks") then -- If the peasant is foraging then
		Functions.PeasantForage(Attacker, Enemy)
		return
	end
	if math.random(1, 2) == 1 then
		local Anim = PlayAnim(Anims["Peasant"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		
		PlaySound(5951832571, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 5)
		
		wait(0.5)
		
	else
		local Anim = PlayAnim(Anims["Peasant"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		
		PlaySound(9083787050, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 5)
		
		wait(0.6)
	end
end

function Functions.PeasantForage(Attacker, Rescource)
	if Rescource.Parent.Name == "Ores" then
		-- If it is already mined, let's find another one
		if Rescource.Stats.HitsLeft.Value <= 0 then
			for i,v in pairs(game.Workspace.Resources.Ores:GetChildren()) do
				if v.Name == Rescource.Name and v.Stats.HitsLeft.Value > 0 and (v.PrimaryPart.Position - Rescource.PrimaryPart.Position).Magnitude < 80 then
					Attacker.Stats.Variables.ObjectTarget.Value = v
					return
				end
			end
			if Rescource.Stats.HitsLeft.Value <= 0 then -- If there was nothing nearby
				Attacker.Stats.Variables.ObjectTarget.Value = nil
				Attacker.Stats.Variables.Mode.Value = "Follow"
				return
			end
		end
		
		local Anim = PlayAnim(Anims["PeasantOreForaging"], Attacker)
		Anim:Play()
		if WaitTime(0.7, {Attacker}) == false then return end
		PlaySound(146466021, Attacker, 0.5)
		if WaitTime(1, {Attacker}) == false then return end
		PlaySound(146466021, Attacker, 0.5)
		if WaitTime(1, {Attacker}) == false then return end
		PlaySound(146466021, Attacker, 0.5)
		if WaitTime(0.3, {Attacker}) == false then return end
		game.ReplicatedStorage.NetCommunications.PeasantOre:Fire(game.Players[Attacker.Parent.Name], Rescource, Attacker)
		
		wait(1)
	
	elseif Rescource.Parent.Name == "Trees" then
		-- If it is already mined, let's find another one
		if Rescource.Stats.HitsLeft.Value <= 0 then
			for i,v in pairs(game.Workspace.Resources.Trees:GetChildren()) do
				if v.Stats.HitsLeft.Value > 0 and (v.PrimaryPart.Position - Rescource.PrimaryPart.Position).Magnitude < 80 then
					Attacker.Stats.Variables.ObjectTarget.Value = v
					return
				end
			end
			if Rescource.Stats.HitsLeft.Value <= 0 then -- If there was nothing nearby
				Attacker.Stats.Variables.ObjectTarget.Value = nil
				Attacker.Stats.Variables.Mode.Value = "Follow"
				return
			end
		end
		
		local Anim = PlayAnim(Anims["PeasantTreeForaging"], Attacker)
		Anim:Play()
		if WaitTime(0.7, {Attacker}) == false then return end
		PlaySound(196768041, Attacker, 0.5)
		if WaitTime(1, {Attacker}) == false then return end
		PlaySound(196768041, Attacker, 0.5)
		if WaitTime(1, {Attacker}) == false then return end
		PlaySound(196768041, Attacker, 0.5)
		if WaitTime(0.3, {Attacker}) == false then return end
		game.ReplicatedStorage.NetCommunications.PeasantTree:Fire(game.Players[Attacker.Parent.Name], Rescource, Attacker)
		
		wait(1)
		
	elseif Rescource:IsA("Model") and Rescource.Parent.Name == "Castle" then
		local StalkCount = 0
		-- Check if there are still stalks, if not check if there are field nearby
		for i, Stalk in pairs(Rescource.Stalks:GetChildren()) do
			if Stalk.Transparency == 0 then
				break
			elseif i == 25 then
				for i,Building in pairs(Rescource.Parent:GetChildren()) do
					if Building:FindFirstChild("Stalks") then
						for i,e in pairs(Building.Stalks:GetChildren()) do
							if e.Transparency == 0 then
								Attacker.Stats.Variables.ObjectTarget.Value = Building
								return
							end
						end
					end
				end				
				
				Attacker.Stats.Variables.ObjectTarget.Value = nil
				Attacker.Stats.Variables.Mode.Value = "Follow"
				return
			end
		end
		
		if Rescource ~= nil then
			local Anim = PlayAnim(Anims["PeasantWheatForaging"], Attacker)
			Anim:Play()
			if WaitTime(0.7, {Attacker}) == false then return end
			PlaySound(28144291, Attacker, 0.5)
			if WaitTime(1, {Attacker}) == false then return end
			PlaySound(28144291, Attacker, 0.5)
			if WaitTime(1, {Attacker}) == false then return end
			PlaySound(28144291, Attacker, 0.5)
			if WaitTime(0.3, {Attacker}) == false then return end
			local PickaxeDamage = {Bronze = 1, Iron = 3, Steel = 5, Mithril = 7, Moonstone = 10, Sundust = 20}
			game.ReplicatedStorage.NetCommunications.PeasantWheat:Fire(game.Players[Attacker.Parent.Name], Rescource, PickaxeDamage[Attacker.Stats.RequiredWeapons.Pitchfork.Type.Value])
			
			wait(1)
		end
		
	end
end


-- Swordsman
function Functions.SwordsmanAttack(Attacker, Enemy)
	if math.random(1, 2) == 1 then
		local Anim = PlayAnim(Anims["Swordsman"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(320242428, Attacker, 0.5)
		if WaitTime(0.2, {Attacker, Enemy}) == false then return end
		DealDamage(Attacker, Enemy, 10)
		wait(0.4)
		
	else
		local Anim = PlayAnim(Anims["Swordsman"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		PlaySound(320242428, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 10)
		wait(0.5)
	end
end



-- Archer
function Functions.ArcherAttack(Attacker, Enemy, Distance)
	local Anim = PlayAnim(Anims["Archer"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.6, {Attacker, Enemy}) == false then return end
	
	PlaySound(16211041, Attacker, 0.5)
	if Distance > 7 then
		Attacker:FindFirstChild("Arrow", true).Transparency = 1
		if Attacker.Stats.Variables.Mode.Value == "Assigned" then
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -1, 1, {game.Workspace.TribeAreas, Attacker.Parent.Parent}, "Sticky", 10, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/10, 0), 7.5, 263032182)
		else
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -1, 1, {Attacker.Parent.Parent}, "Sticky", 10, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/10, 0), 7.5, 263032182)
		end
	else
		DealDamage(Attacker, Enemy, 10)
	end
	if WaitTime(1.1, {Attacker}) == false then return end
	Attacker:FindFirstChild("Arrow", true).Transparency = 0
	wait(0.3)
end

-- Enchanter
function Functions.EnchanterAttack(Attacker, Enemy, Distance)
	
	local Anim = PlayAnim(Anims["Enchanter"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.6, {Attacker, Enemy}) == false then return end
	PlaySound(3059775624, Attacker, 0.8)
	if WaitTime(0.1, {Attacker, Enemy}) == false then return end


	local Ball = game.ServerStorage.Storage.SoldierThings.MagicBall2:Clone()
	

	require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 3)
	Ball.CFrame = Attacker["Right Arm"].CFrame
	Ball.Parent = Attacker
	local NewTween = TS:Create(Ball, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.PrimaryPart.CFrame, Size = Vector3.new(2, 2, 2)})
	NewTween:Play()
	wait(0.15)
	local NewTween = TS:Create(Ball, TweenInfo.new(0.05, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(10, 10, 10)})
	NewTween:Play()
	emitParticles()
	wait(0.05)
	Ball:Destroy()

	DealDamage(Attacker, Enemy, 10)
	wait(0.1)
end



-- Knight
function Functions.KnightAttack(Attacker, Enemy)
	if math.random(1, 2) == 1 then
		local Anim = PlayAnim(Anims["Knight"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(1527553649, Attacker, 0.5)
		if WaitTime(0.1, {Attacker, Enemy}) == false then return end
		DealDamage(Attacker, Enemy, 25)
		
		

		
		wait(1)
	else
		local Anim = PlayAnim(Anims["Knight"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(263032221, Attacker, 1)
		DealDamage(Attacker, Enemy, 25)
		
	

		
		wait(0.6)
	end
end


-- Hunter 
function Functions.HunterAttack(Attacker, Enemy, Distance)
	if Distance > 8 then -- Throw the spear
		local Anim = PlayAnim(Anims["Hunter"][2], Attacker)
		Anim:Play()
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		PlaySound(292390922, Attacker, 0.8)
		require(game.ServerStorage.Storage.Scripts.Utilities).HideModel({Attacker.Handle, Attacker.Blade})
		
		ShootArrow(Attacker, Enemy, "Short Spear", Attacker["Right Arm"].Position, -3, 3, {Attacker.Parent.Parent}, "Sticky", 15, true, Attacker["Right Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/20, 0), 7.5, 263032182)
		
		if WaitTime(1, {Attacker}) == false then return end
		require(game.ServerStorage.Storage.Scripts.Utilities).UnhideModel({Attacker.Handle, Attacker.Blade})
		wait(0.5)
	else
		local Anim = PlayAnim(Anims["Hunter"][1], Attacker)
		Anim:Play()
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		PlaySound(263032182, Attacker, 0.7)
		DealDamage(Attacker, Enemy, 20)
		wait(0.5)
	end
end


-- Marksman
function Functions.MarksmanAttack(Attacker, Enemy, Distance)
	local Anim = PlayAnim(Anims["Marksman"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.6, {Attacker, Enemy}) == false then return end
	
	PlaySound(16211041, Attacker, 0.5)
	if Distance > 7 then
		Attacker:FindFirstChild("Arrow", true).Transparency = 1
		if Attacker.Stats.Variables.Mode.Value == "Assigned" then
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -0.5, 0.5, {game.Workspace.TribeAreas, Attacker.Parent.Parent}, "Sticky", 20, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/15, 0), 10, 263032182)
		else
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -0.5, 0.5, {Attacker.Parent.Parent}, "Sticky", 20, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/15, 0), 10, 263032182)
		end
	else
		DealDamage(Attacker, Enemy, 20)
	end
	if WaitTime(1.1, {Attacker}) == false then return end
	Attacker:FindFirstChild("Arrow", true).Transparency = 0
	wait(0.3)
end



-- Ranger
function Functions.RangerAttack(Attacker, Enemy)
	if math.random(1, 2) == 1 then
		local Anim = PlayAnim(Anims["Ranger"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.3, {Attacker, Enemy}) == false then return end
		PlaySound(553461842, Attacker, 0.5)
		if WaitTime(0.3, {Attacker, Enemy}) == false then return end
		
		DealDamage(Attacker, Enemy, 30)
		
		wait(0.4)
		
	else
		local Anim = PlayAnim(Anims["Ranger"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.55, {Attacker, Enemy}) == false then return end
		PlaySound(553461842, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 30)
		
		wait(0.45)
	end
end



-- Sorcerer
function Functions.SorcererAttack(Attacker, Enemy, Distance)
	local Anim = PlayAnim(Anims["Sorcerer"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.2, {Attacker, Enemy}) == false then return end
	for w = 1, 3 do
		delay(0, function()
			PlaySound(5272424320, Attacker, 0.7)
			local Ball = game.ServerStorage.Storage.SoldierThings.MagicBall2:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 3)
			Ball.CFrame = Attacker.Effects.CFrame
			Ball.Parent = Attacker
			local NewTween = TS:Create(Ball, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.PrimaryPart.CFrame, Size = Vector3.new(2, 2, 2)})
			NewTween:Play()
			wait(0.15)
			local NewTween = TS:Create(Ball, TweenInfo.new(0.05, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(10, 10, 10)})
			NewTween:Play()    
			emitParticles(25, Enemy.PrimaryPart)
			wait(0.05)
			Ball:Destroy()
			DealDamage(Attacker, Enemy, 10)
		end)
		if WaitTime(0.2, {Attacker, Enemy}) == false then break end
	end
	
	wait(0.2)
end


-- Druid
function Functions.DruidAttack(Attacker, Enemy, Distance)
	local Anim = PlayAnim(Anims["Druid"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.7, {Attacker, Enemy}) == false then return end
	PlaySound(3059775781, Attacker, 0.8)
	local Ball = game.ServerStorage.Storage.SoldierThings.GreenBall:Clone()
	require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 3)
	Ball.CFrame = Attacker["Right Arm"].CFrame
	Ball.Parent = Attacker
	local NewTween1 = TS:Create(Ball, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.PrimaryPart.CFrame, Size = Vector3.new(2, 2, 2)})
	NewTween1:Play()
	if WaitTime(0.2, {Attacker, Enemy}) == false then return end
	delay(0, function()
		for w = 2, 6 do
			local Ran = Random.new():NextNumber(0.03, 0.1)
			local NewTween1 = TS:Create(Ball, TweenInfo.new(Ran, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.PrimaryPart.CFrame, Size = Vector3.new(math.random(w, 10), math.random(w, 10), math.random(w, 10))})
			NewTween1:Play()
			if WaitTime(Ran, {Attacker, Enemy}) == false then break end
			DealDamage(Attacker, Enemy, 20, 4)
		end
		Ball:Destroy()
	end)
	
	wait(0.1)
end


-- Paladin
function Functions.PaladinAttack(Attacker, Enemy, Distance, EnemiesTable)
	local CloseEnemies = {}
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] < 10 then
			table.insert(CloseEnemies, v["Character"])
		else
			break
		end
	end
	
	if #CloseEnemies >= 3 or Attacker.Humanoid.Health < Attacker.Humanoid.MaxHealth * 0.2 then -- Attack if there are 3 or more, or if we're low on hp
		local Anim = PlayAnim(Anims["Paladin"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		PlaySound(392337442, Attacker, 1)
		
		for i, Npc in pairs(CloseEnemies) do
			if HealthCheck({Npc}) then
				require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Npc, "Short")
				DealDamage(Attacker, Npc, 20)
			end
		end
		
		if HealthCheck({Enemy}) then
			require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "Short")
		end
		
		if WaitTime(0.1, {Attacker}) == false then return end
		PlaySound(553631150, Attacker, 1)
		if WaitTime(0.25, {Attacker}) == false then return end
		PlaySound(2900321088, Attacker, 1)
		
		if HealthCheck({Enemy}) then
			DealDamage(Attacker, Enemy, 30)
		end
		
		wait(0.65)
		
	else
		local Anim = PlayAnim(Anims["Paladin"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(553631150, Attacker, 1)
		if WaitTime(0.2, {Attacker, Enemy}) == false then return end
		PlaySound(2900321088, Attacker, 1)
		DealDamage(Attacker, Enemy, 40)
		wait(0.4)
	end
end


-- Templar
function Functions.TemplarAttack(Attacker, Enemy, Distance, EnemiesTable)
	local CloseEnemies = {}
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] < 50 then
			table.insert(CloseEnemies, v["Character"])
		else
			break
		end
	end
	
	if #CloseEnemies == 1 and Attacker.Stats.Variables.Class.Value ~= "Ogre" and Attacker.Humanoid.Health < Attacker.Humanoid.MaxHealth * 0.9 or Attacker.Humanoid.Health < Attacker.Humanoid.MaxHealth * 0.5 then -- Heal himself
		local Anim = PlayAnim(Anims["Templar"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(225698273, Attacker, 1)
		if WaitTime(0.1, {Attacker, Enemy}) == false then return end
		DealDamage(Attacker, Enemy, 60)
		if Enemy.Humanoid.Health > 0 then
			local Anim2 = PlayAnim(Anims["Templar"][3], Attacker)
			Anim2:Play()
			Anim:Stop()
			wait(0.5)
		else
			-- Waiting for goblin to be put in workspace
			local Start = time()
			for w = 0, 3, 0.03 do
				if Enemy.Parent == game.Workspace then
					break
				end
				wait(0.03)
			end
			if HealthCheck({Attacker}) == false then return end
			local Delay = time() - Start
			
			for i,v in pairs(Enemy:GetChildren()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
			Enemy.Torso.Anchored = true
			
			game.ServerStorage.Storage.SoldierThings.HealingEmitter:Clone().Parent = Attacker.HumanoidRootPart
			game.ServerStorage.Storage.SoldierThings.HealingLight:Clone().Parent = Attacker.HumanoidRootPart
			PlaySound(1694173621, Attacker, 2)
			
			-- Lifting goblin in air for 2.1 seconds
			delay(0, function()
				local S = time() + Delay
				repeat
					Enemy.Torso.CFrame = Attacker.Blade.CFrame * CFrame.new(0.0813970566, 0.0082244873, 2.75529671, -3.26468239e-07, 0.999990463, -3.64985681e-05, 1, 2.477843e-07, -4.48757874e-07, -3.40618072e-07, -2.77034615e-05, -1)
					wait()
				until time() - S >= 2.1
			end)
			
			if WaitTime(0.7 - Delay, {Attacker}) == false then return end
			
			local NewTween = TS:Create(Attacker.Humanoid, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Health = Attacker.Humanoid.MaxHealth})
			NewTween:Play()
			
			if WaitTime(0.5, {Attacker}) == false then return end
			
			Attacker.HumanoidRootPart.HealingEmitter.Enabled = false
			if WaitTime(1.2, {Attacker}) == false then return end
			Attacker.HumanoidRootPart.HealingEmitter:Destroy()
			Attacker.HumanoidRootPart.HealingLight:Destroy()
			Enemy.Torso.Anchored = false
			wait(0.5)
		end
		
	else
		local Anim = PlayAnim(Anims["Templar"][1], Attacker)
		Anim:Play()
		if WaitTime(0.2, {Attacker}) == false then return end
		PlaySound(344936310, Attacker, 1)
		if WaitTime(0.1, {Attacker, Enemy}) == false then return end
		DealDamage(Attacker, Enemy, 25)
		wait(0.7)
	end
end


-- Huntsman 
function Functions.HuntsmanAttack(Attacker, Enemy, Distance)
	
	if Distance > 90 and Attacker.Stats.Variables.Mode.Value ~= "Attack" then -- Lay traps
		local Anim = PlayAnim(Anims["Huntsman"][3], Attacker)
		Anim:Play()
		
		
		local Position = CFrame.new(Attacker.PrimaryPart.Position, Enemy.PrimaryPart.Position) * CFrame.new(0, 0, -15) * CFrame.new(math.random(-5, 5), -3, math.random(-5, 5))
		Attacker.PrimaryPart.CFrame = CFrame.new(Attacker.PrimaryPart.Position, Position.p)
		
		if WaitTime(1, {Attacker}) == false then return end
		local Trap = game.ServerStorage.Storage.SoldierThings.Trap:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Trap, 30)
		Trap.CFrame = Attacker["Right Arm"].CFrame
		
		
		Trap.Touched:Connect(function(Hit)
			local Humanoid = Hit.Parent:IsA("Model") and Hit.Parent:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Parent:FindFirstChild("Trap") == nil then
				if TeamCheck(Attacker, Humanoid.Parent) == false then
					local NewTrap = Trap:Clone()
					require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(NewTrap, 15)
					Trap:Destroy()
					require(game.ServerStorage.Storage.Scripts.Utilities).Weld(Hit, NewTrap)
					NewTrap.Parent = Humanoid.Parent
					NewTrap.ChompSound:Play()
					DealDamage(Attacker, Humanoid.Parent, 100)
					require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Attacker, 4, 15)
				end
			end
		end)
		Trap.Parent = Attacker
		
		local NewTween = TS:Create(Trap, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Position * CFrame.Angles(math.rad(90), math.rad(180), math.rad(math.random(1, 360)))})
		NewTween:Play()
		wait(0.5)
		
	elseif Distance > 15 and Distance < 90 then -- Throw the spear
		local Anim = PlayAnim(Anims["Huntsman"][2], Attacker)
		Anim:Play()
		if WaitTime(0.5, {Attacker, Enemy}) == false then return end
		PlaySound(292390922, Attacker, 0.8)
		require(game.ServerStorage.Storage.Scripts.Utilities).HideModel({Attacker:FindFirstChild("Blade Weld", true).Parent, Attacker.Blade})
		
		ShootArrow(Attacker, Enemy, "Long Spear", Attacker["Right Arm"].Position, -1, 1, {Attacker.Parent.Parent}, "Sticky", 25, true, Attacker["Right Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/20, 0), 7.5, 263032182)
		
		if WaitTime(0.5, {Attacker}) == false then return end
		require(game.ServerStorage.Storage.Scripts.Utilities).UnhideModel({Attacker:FindFirstChild("Blade Weld", true).Parent, Attacker.Blade})
		
	elseif Distance < 15 then
		local Anim = PlayAnim(Anims["Huntsman"][1], Attacker)
		Anim:Play()
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(263032182, Attacker, 0.7)
		DealDamage(Attacker, Enemy, 35)
		wait(0.6)
		
	else
		Attacker.Humanoid:MoveTo(Enemy.HumanoidRootPart.Position)
	end
end


-- Cavalier
function Functions.CavalierAttack(Attacker, Enemy)
	local Anim = PlayAnim(Anims["Cavalier"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.4, {Attacker, Enemy}) == false then return end
	PlaySound(186112092, Attacker, 0.8)
	if WaitTime(0.15, {Attacker, Enemy}) == false then return end
	DealDamage(Attacker, Enemy, 25)
	wait(0.45)
end


-- Sharpshooter
function Functions.SharpshooterAttack(Attacker, Enemy, Distance)
	local Anim = PlayAnim(Anims["Sharpshooter"][1], Attacker)
	Anim:Play()
	
	if WaitTime(0.8, {Attacker, Enemy}) == false then return end
	PlaySound(149445347, Attacker, 0.5)
	
	local Bolt = game.ServerStorage.Storage.SoldierThings.Bolt:Clone()
	require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Bolt, 3)
	Bolt.CFrame = Attacker["Left Arm"].CFrame
	Bolt.Parent = Attacker
	
	
	local Start = time()
	local Angle = CFrame.new(Bolt.Position, Enemy.PrimaryPart.Position)
	local IgnoreTable = {Attacker.Parent.Parent}
	for w = 1, 3 do
		local Ray1 = Ray.new(Bolt.Position, Angle.lookVector.unit * 200)
		local Hit, Pos = game.Workspace:FindPartOnRayWithIgnoreList(Ray1, IgnoreTable)
		
		local NewTween = TS:Create(Bolt, TweenInfo.new(Distance/500, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {CFrame = CFrame.new(Pos)})
		NewTween:Play()
		

		wait(Distance/500)
		
		if Hit and Hit.Parent then
			local HitModel, HitType = require(game.ReplicatedStorage.ReplicatedUtilities).CheckAlivity(Hit)
			
			if HitModel then
				table.insert(IgnoreTable, HitModel)
				if w == 1 then
					PlaySound(162897854, Hit, 0.5)
				else
					PlaySound(723133984, Hit, 0.5)
				end
				
				if HealthCheck({Attacker}) then
					if Enemy.Stats.Variables.Class.Value ~= "Ogre" and Enemy.Stats.Variables.Class.Value ~= "Goblin Chief" then
						require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, HitModel, "Far")
					end
					TeamCheck(Attacker, HitModel, 25, w) -- Damage is halved every time it penetrates another goblin
				end
				
				if HitType == "Building" then
					break -- cannot penetrate walls or buildings
				end
			else
				Bolt:Destroy()
				break
			end
		end
	end
	wait(1.2 - (time()-Start))
end




-- Assassin
function Functions.AssassinAttack(Attacker, Enemy, Distance, EnemiesTable)
	local CloseEnemies = {}
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] < 25 then
			table.insert(CloseEnemies, v["Character"])
		else
			break
		end
	end
	
	if Enemy.PrimaryPart.Name == "HumanoidRootPart" and #CloseEnemies == 1 or Enemy.PrimaryPart.Name == "HumanoidRootPart" and Enemy.Humanoid.MaxHealth > 100 then
		local Anim = PlayAnim(Anims["Assassin"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		for w = 1, 4 do
			if w == 1 or w == 3 then
				PlaySound(834171066, Attacker, 0.5)
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy:FindFirstChild("Left Leg"))
			end
			DealDamage(Attacker, Enemy, 80, 8)
			require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy:FindFirstChild("Right Leg"))
			wait(0.1)
		end
		wait(0.2)
		for w = 1, 4 do
			if w == 1 or w == 3 then
				PlaySound(834171066, Attacker, 0.5)
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy:FindFirstChild("Left Leg"))
			end
			DealDamage(Attacker, Enemy, 80, 8)
			require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy:FindFirstChild("Right Leg"))
			wait(0.1)
		end
		
		if Enemy.Humanoid.Health > 0 then
			if WaitTime(0.6, {Attacker, Enemy}) == false then return end
			PlaySound(186112092, Attacker, 0.8)
			require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "Far")
			DealDamage(Attacker, Enemy, 60)
			
			require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Enemy, 3, 30)
			
			wait(0.8)
		else
			Anim:Stop(0.25)
		end
		
	else
		local Anim = PlayAnim(Anims["Assassin"][2], Attacker)
		Anim:Play()
		if WaitTime(0.3, {Attacker, Enemy}) == false then return end
		PlaySound(834171066, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 70, 2)
		if WaitTime(0.2, {Attacker, Enemy}) == false then return end
		PlaySound(834171066, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 70, 2)
		wait(0.3)
	end
end






-- Rider
function Functions.RiderAttack(Attacker, Enemy, Distance)
	if Distance > 90 and Enemy.PrimaryPart.Name == "HumanoidRootPart" then
		local Anim = PlayAnim(Anims["Rider"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.2, {Attacker, Enemy}) == false then return end
		for w = 1, 3 do
			if HealthCheck({Enemy}) then
				PlaySound(16211041, Attacker, 0.5)
				ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -3, 3, {Attacker.Parent.Parent}, "Sticky", 15, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/4, 0), 5, 263032182)
			end
			if WaitTime(0.3, {Attacker, Enemy}) == false then return end
		end
		
		wait(0.2)
	else
		-- If we are attacking a human enemy, let's run back!
		if Enemy.PrimaryPart.Name == "HumanoidRootPart" then
			local RunToPos = (Attacker.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(math.random(-90, 90)), 0) * CFrame.new(0, 0, 20)).p
			if Attacker.Stats.Variables.Mode.Value == "Stationary" and (RunToPos - Attacker.Stats.Variables.StationaryPos.Value).Magnitude < 100 or Attacker.Stats.Variables.Mode.Value ~= "Stationary" then
				Attacker.Humanoid:MoveTo(RunToPos)
			end
		end
		
		if math.random(1, 2) == 1 then
			local Anim = PlayAnim(Anims["Rider"][1], Attacker)
			Anim:Play()
			if WaitTime(0.3, {Attacker, Enemy}) == false then return end
			PlaySound(16211041, Attacker, 0.5)
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -1, 1, {Attacker.Parent.Parent}, "Sticky", 15, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/10, 0), 7.5, 263032182)
			wait(0.4)
			
		else
			local Anim = PlayAnim(Anims["Rider"][3], Attacker)
			Anim:Play()
			if WaitTime(0.3, {Attacker, Enemy}) == false then return end
			PlaySound(16211041, Attacker, 0.5)
			ShootArrow(Attacker, Enemy, "ArcherArrow", Attacker["Left Arm"].Position, -1, 1, {Attacker.Parent.Parent}, "Sticky", 15, true, Attacker["Left Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/10, 0), 7.5, 263032182)
			wait(0.4)
		end
	end
end





-- Pyromancer
function Functions.PyromancerAttack(Attacker, Enemy, Distance)
	
	if Distance < 7 or Enemy.PrimaryPart.Name ~= "HumanoidRootPart" then
		local Anim = PlayAnim(Anims["Pyromancer"][1], Attacker)
		Anim:Play()
		
		wait(0.3)
		PlaySound(553461842, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 30, 3)
		wait(0.3)
		PlaySound(553461842, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 30, 3)
		wait(0.5)
		PlaySound(553461842, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 30, 3)
		wait(0.4)
		
	elseif Enemy.PrimaryPart:FindFirstChild("Fire") == nil then
		local Anim = PlayAnim(Anims["Pyromancer"][2], Attacker)
		Anim:Play()
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		require(game.ServerStorage.Storage.Scripts.Utilities).HideModel({Attacker.UpperBottle, Attacker.Bottle, Attacker.Rag})
		
		delay(0, function()
			local Molotov = game.ServerStorage.Storage.SoldierThings.Molotov:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Molotov, 10)
			Molotov.Parent = Attacker
			
			if HealthCheck({Enemy}) == false then return end
			Molotov:SetPrimaryPartCFrame(CFrame.new(Attacker["Right Arm"].Position, Enemy.PrimaryPart.Position))
			
			local RandomNum = Vector3.new(math.random(-5, 5), math.random(-5, 5), math.random(-5, 5))
			local Control = Attacker["Right Arm"].Position:Lerp(Enemy.PrimaryPart.Position, 0.3) + Vector3.new(0, Distance/5, 0)
			local EnemyPos = Enemy.PrimaryPart.Position
			for w = 0, 100, 7.5 do
				local Percent = w/100 if Percent > 100 then Percent = 100 end
				local ToPos = CFrame.new((1-Percent)^2 * Attacker["Right Arm"].Position + 2 * (1-Percent) * Percent * Control + Percent^2 * EnemyPos + RandomNum)
				local Angle = CFrame.new(Molotov.PrimaryPart.Position, ToPos.p)
				Molotov:SetPrimaryPartCFrame(ToPos * (Angle - Angle.p))
				wait(0.03)
			end
			
			
			
			local FireArea = game.ServerStorage.Storage.SoldierThings.FireArea:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(FireArea, 10)
			if HealthCheck({Enemy}) then
				FireArea.CFrame = CFrame.new(Molotov.PrimaryPart.Position.X, Enemy.PrimaryPart.Position.Y, Molotov.PrimaryPart.Position.Z)
			end
			Molotov:Destroy()
			
			FireArea.Touched:Connect(function(Hit)
				if HealthCheck({Hit.Parent}) and Hit.Parent.HumanoidRootPart:FindFirstChild("Fire") == nil then
					if TeamCheck(Attacker, Hit.Parent) == false then
						
						FireArea.Fire:Clone().Parent = Hit.Parent.HumanoidRootPart
						FireArea.FireLight:Clone().Parent = Hit.Parent.HumanoidRootPart
						require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Hit.Parent, 5, 5)
						for w = 1, 50 do
							if Hit.Parent == nil then return end
							DealDamage(Attacker, Hit.Parent, 25, 50)
							wait(0.1)
						end
						
						if HealthCheck({Hit.Parent}) then
							Hit.Parent.HumanoidRootPart.Fire:Destroy()
							Hit.Parent.HumanoidRootPart.FireLight:Destroy()
						end
					end
				end
			end)
			FireArea.Parent = Attacker
			PlaySound(1581275965, FireArea, 0.5)
			
			wait(5)
			FireArea.Fire.Enabled = false
			FireArea.FireEmitter.Enabled = false
			FireArea.FireLight.Enabled = false
		end)
		
		
		if WaitTime(0.5, {Attacker}) == false then return end
		require(game.ServerStorage.Storage.Scripts.Utilities).UnhideModel({Attacker.UpperBottle, Attacker.Bottle, Attacker.Rag})
		wait(0.6)
	end
end



-- Warlock
function Functions.WarlockAttack(Attacker, Enemy, Distance)
	if Distance < 10 or Enemy.PrimaryPart.Name ~= "HumanoidRootPart" then
		local Anim = PlayAnim(Anims["Warlock"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.3, {Attacker, Enemy}) == false then return end
		PlaySound(588732660, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 20)
		if WaitTime(0.1, {Attacker, Enemy}) == false then return end
		local E = game.ServerStorage.Storage.SoldierThings.BubbleEmitter:Clone()
		E.Parent = Attacker.MagicBall
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(E, 0.5)
		wait(0.15)
		E.Enabled = false
		wait(0.45)
		
	elseif Distance < 45 then
		local Anim = PlayAnim(Anims["Warlock"][2], Attacker)
		Anim:Play()
		PlaySound(588697034, Attacker, 0.5)
		
		if WaitTime(0.85, {Attacker, Enemy}) == false then return end
		local Rock = game.ServerStorage.Storage.SoldierThings.Rock:Clone()
		Rock.CFrame = Attacker.PrimaryPart.CFrame * CFrame.new(0, 0, -10)
		Rock.BodyPosition.Position = (CFrame.new(Attacker.PrimaryPart.Position, Enemy.PrimaryPart.Position) * CFrame.new(0, 0, -15)).p
		
		Rock.Parent = Attacker
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Rock, 20)
		PlaySound(292536356, Rock, 0.5)
		
		-- Rolling the rock
		local Angle = CFrame.new(Attacker.PrimaryPart.Position, Enemy.PrimaryPart.Position)
		delay(0, function()
			for w = -15, -150, -15 do
				Rock.BodyPosition.Position = (Angle * CFrame.new(0, 0, w)).p
				wait(0.25)
			end
			Rock.BodyPosition:Destroy()
		end)	
		
		local HitList = {}
		Rock.Touched:Connect(function(Hit)
			if (Rock.Velocity - Vector3.new(0, 0, 0)).Magnitude > 3 then
				if Hit.Parent:FindFirstChild("Humanoid") and Hit.Name == "HumanoidRootPart" and TeamCheck(Attacker, Hit.Parent) == false then
					for i,v in pairs(HitList) do
						if v == Hit.Parent then
							return
						end
					end
					table.insert(HitList, Hit.Parent)
					require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Rock, Hit.Parent, "Really Short")
					
					DealDamage(Attacker, Hit.Parent, 10)
					require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Hit)
				end
			end
		end)
		
		
		
		local NewTween = TS:Create(Rock, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {Size = Vector3.new(15, 15, 15)})
		NewTween:Play()
		
		wait(1.15 + 0.5)
		
		delay(0, function()
			wait(8)
			Rock.CanCollide = false
			wait(3)
			Rock:Destroy()
		end)
		
	else
		local Anim = PlayAnim(Anims["Warlock"][3], Attacker)
		Anim:Play()
		PlaySound(588697034, Attacker, 0.5)
		
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		-- throw the rocks 0.9 seconds to do that
		
		local EnemyPos = nil
		for w = 1, 3 do
			
			local MR = game.ServerStorage.Storage.SoldierThings.MeteorRock:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(MR, 10)
			MR.CFrame = CFrame.new(Attacker.HumanoidRootPart.Position + Vector3.new(math.random(-30, 30), 60, math.random(-30, 30)))
			MR.Parent = Attacker
			if Enemy.PrimaryPart then
				EnemyPos = Enemy.PrimaryPart.CFrame
			end
			PlaySound(967702503, MR, 1)
			
			local NewTween = TS:Create(MR, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {CFrame = EnemyPos * CFrame.new(math.random(-15, 15), 0, math.random(-25, 05))})
			NewTween:Play()
			
			delay(0, function()
				wait(1)
				PlaySound(2248511, MR, 1)
				MR.CanCollide = true
				MR.Anchored = false
				MR.ParticleEmitter.Enabled = false
				MR.ParticleEmitter2.Enabled = false
				MR.Fire.Enabled = true
				MR.FireEmitter.Enabled = true
				
				
				local LowPos = Vector3.new(MR.Position.X - 10, MR.Position.Y - 10, MR.Position.Z - 10)
				local HighPos = Vector3.new(MR.Position.X + 10, MR.Position.Y + 10, MR.Position.Z + 10)
				local Region = Region3.new(LowPos, HighPos)
				
				for i,v in pairs(game.Workspace:FindPartsInRegion3(Region, Attacker.Parent.Parent, 10000)) do
					if v.Name == "HumanoidRootPart" and v.Parent:FindFirstChild("Torso") then
						if TeamCheck(Attacker, v.Parent) == false then
							require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(MR, v.Parent, "None")
							DealDamage(Attacker, v.Parent, 10)
						end
					end
				end
				
				
				local EX = Instance.new("Explosion")
				EX.BlastPressure = 0
				EX.BlastRadius = 10
				EX.DestroyJointRadiusPercent = 0
				EX.ExplosionType = "NoCraters"
				EX.Position = MR.Position
				EX.Parent = MR
			end)
			
			wait(0.1666)
		end
		wait(0.9 + 0.5)
	end
end


-- Archmage
function Functions.ArchmageAttack(Attacker, Enemy, Distance, EnemiesTable)
	local CloseEnemies = 0
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] < 30 then
			CloseEnemies = CloseEnemies + 1
		end
	end
	
	if Distance < 10 and CloseEnemies <= 3 or Enemy.PrimaryPart.Name ~= "HumanoidRootPart" then -- Sword
		local Anim = PlayAnim(Anims["Archmage"][1], Attacker)
		Anim:Play()
		PlaySound(231917950, Attacker, 1)
		
		wait(0.5)
		DealDamage(Attacker, Enemy, 20)
		wait(0.5)
		
	elseif Distance < 30 then -- Blow
		local Anim = PlayAnim(Anims["Archmage"][2], Attacker)
		Anim:Play()
		PlaySound(876800936, Attacker, 1)
		
		if WaitTime(0.4, {Attacker}) == false then return end
		
		
		local NewTween = TS:Create(Attacker.MagicBall.Ball, TweenInfo.new(0.9, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 200})
		NewTween:Play()
		local NewTween = TS:Create(Attacker.MagicBall.Magic, TweenInfo.new(0.9, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 5})
		NewTween:Play()
		if WaitTime(1, {Attacker}) == false then return end
		
		PlaySound(162271116, Attacker, 1)
		Attacker.MagicBall.Ball.Rate = 0
		Attacker.MagicBall.Magic.Rate = 0
		
		local Ball = game.ServerStorage.Storage.SoldierThings.PushBall:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 10)
		Ball.CFrame = Attacker.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
		Ball.Parent = Attacker
		
		local HitNpcs = {}
		Ball.Touched:Connect(function(Hit)
			if Hit.Name == "HumanoidRootPart" then
				if TeamCheck(Attacker, Hit.Parent) == false then
					for i,v in pairs(HitNpcs) do
						if v == Hit.Parent then
							return
						end
					end
					table.insert(HitNpcs, Hit.Parent)
					
					require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Ball, Hit.Parent, "Medium")
					DealDamage(Attacker, Hit.Parent, 5)
				end
			end
		end)
		
		local NewTween = TS:Create(Ball, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(80, 80, 80), Transparency = 1})
		NewTween:Play()
		
		wait(1)
		
		Ball:Destroy()
		
	elseif Distance < 55 then -- Fireball
		local Anim = PlayAnim(Anims["Archmage"][3], Attacker)
		Anim:Play()
		PlaySound(876800936, Attacker, 1)
		
		wait(0.2)
		local NewTween = TS:Create(Attacker.MagicBall.Ball, TweenInfo.new(1.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 200})
		NewTween:Play()
		local NewTween = TS:Create(Attacker.MagicBall.Magic, TweenInfo.new(1.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 5})
		NewTween:Play()
		
		if WaitTime(1.8, {Attacker}) == false then return end
		PlaySound(162271116, Attacker, 1)
		
		Attacker.MagicBall.Ball.Rate = 0
		Attacker.MagicBall.Magic.Rate = 0
		
		local Ball = game.ServerStorage.Storage.SoldierThings.FireBall:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 7)
		Ball.CFrame = Attacker.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
		Ball.Parent = Attacker
		
		local HitNpcs = {}
		Ball.Touched:Connect(function(Hit)
			if Hit.Name == "HumanoidRootPart" then
				if TeamCheck(Attacker, Hit.Parent) == false then
					for i,v in pairs(HitNpcs) do
						if v == Hit.Parent then
							return
						end
					end
					table.insert(HitNpcs, Hit.Parent)
					
					require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Ball, Hit.Parent, "Short")
					
					local FireSound, FireEmitter, FireLight = game.ServerStorage.Storage.SoldierThings.FireSound:Clone(), game.ServerStorage.Storage.SoldierThings.FireEmitter:Clone(), game.ServerStorage.Storage.SoldierThings.FireLight:Clone()
					FireSound.Parent = Hit FireSound:Play()
					FireEmitter.Parent = Hit
					FireLight.Parent = Hit
					
					local SpeedChange = require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Hit.Parent, 5)
					for w = 1, 20 do
						DealDamage(Attacker, Hit.Parent, 5, 20)
						wait(0.2)
					end
					SpeedChange:Destroy()
					FireSound:Destroy()
					FireEmitter:Destroy()
					FireLight:Destroy()
				end
			end
		end)
		
		local NewTween = TS:Create(Ball, TweenInfo.new(5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Attacker.HumanoidRootPart.CFrame * CFrame.new(0, 0, -150)})
		NewTween:Play()
		local NewTween = TS:Create(Ball, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(30, 30, 30)})
		NewTween:Play()
		
		wait(1)
		
	else -- Lightning
		local Anim = PlayAnim(Anims["Archmage"][4], Attacker)
		Anim:Play()
		local NewTween = TS:Create(Attacker.MagicBall.Ball, TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 200})
		NewTween:Play()
		local NewTween = TS:Create(Attacker.MagicBall.Magic, TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Rate = 5})
		NewTween:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		
		PlaySound(3177777047, Attacker, 3)
		Attacker.MagicBall.Ball.Rate = 0
		Attacker.MagicBall.Magic.Rate = 0
		
	local Lightning = game.ServerStorage.Storage.SoldierThings.Lightning:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Lightning, 3)
		Lightning:SetPrimaryPartCFrame(CFrame.new(Enemy.HumanoidRootPart.Position) * CFrame.Angles(math.random(-10, 10)/10, math.random(-10, 10)/10, 0))
		Lightning.Parent = Attacker
	
		
		delay(0, function()
			for w = 1, #Lightning:GetChildren()-1 do
				if HealthCheck({Enemy}) == false then return end
				Lightning["L"..w].Transparency = 1
				local NewTween = TS:Create(Lightning["L"..w], TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Transparency = 1})
				NewTween:Play()
				Lightning:SetPrimaryPartCFrame(CFrame.new(Enemy.HumanoidRootPart.Position) * (Lightning.PrimaryPart.CFrame - Lightning.PrimaryPart.CFrame.p))
				wait(0.03)
			end
			
			wait(0.1)
			
			for w = 1, #Lightning:GetChildren()-1 do
				if HealthCheck({Enemy}) == false then return end
				Lightning["L"..w].Transparency = 1
				local NewTween = TS:Create(Lightning["L"..w], TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Transparency = 1})
				NewTween:Play()
				wait(0.03)
			end
			Lightning:Destroy()
		end)
		
		-- Time it takes for the lightning to come down
		wait(0.36)
		
		delay(0, function()
			if HealthCheck({Enemy}) then
				PlaySound(3177776953, Enemy, 1)
				
				local EleSound, EleEmitter = game.ServerStorage.Storage.SoldierThings.ElectrocutionSound:Clone(), game.ServerStorage.Storage.SoldierThings.ElectrocutionEmitter:Clone()
				require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(EleSound, 10) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(EleEmitter, 10)
				EleSound.Parent = Enemy.PrimaryPart
				EleSound:Play()
				EleEmitter.Parent = Enemy.PrimaryPart
				
				
				-- Electrocution animation
				local Anim = nil
				if game.PlaceId == 1364987246 then -- Group place
					Anim = PlayAnim(13928151710, Enemy)
					Anim:Play()
				else
					Anim = PlayAnim(13928150901, Enemy)
					Anim:Play()
				end
				require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Anim, 5)
				
				local SpeedChange = require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Enemy, 0)
				for w = 1, 30 do
					DealDamage(Attacker, Enemy, 35, 30)
					wait(0.1)
				end
				SpeedChange:Destroy()
				EleSound:Destroy()
				EleEmitter:Destroy()
				
			end
		end)
		
		wait(0.24)
	end
end




-- Shaman
function Functions.ShamanAttack(Attacker, Enemy, Distance, EnemiesTable)
	local CloseEnemies = {}
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] < 50 then
			table.insert(CloseEnemies, v["Character"])
		else
			break
		end
	end
	
	
	local function StealHealth(Num, StealingLifeEnemy)
		if StealingLifeEnemy == nil or HealthCheck({Attacker, StealingLifeEnemy}) == false then return end
		local PositionOfEnemy = StealingLifeEnemy.HumanoidRootPart.Position
		
		delay(0, function()
			local Ball = game.ServerStorage.Storage.SoldierThings.Shaman_HpBall:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 5)
			
			Ball.Position = PositionOfEnemy
			Ball.RocketPropulsion.Target = Attacker.HumanoidRootPart
			Ball.Parent = game.Workspace
			
			
			if Random.new():NextInteger(1, 2) == 1 then
				Ball.RocketPropulsion.TargetOffset = Vector3.new(50, (Attacker.HumanoidRootPart.Position - PositionOfEnemy).Magnitude, 0)
			else
				Ball.RocketPropulsion.TargetOffset = Vector3.new(0, (Attacker.HumanoidRootPart.Position - PositionOfEnemy).Magnitude, 50)
			end
			Ball.RocketPropulsion:Fire()
			wait(0.15)
			Ball.RocketPropulsion.TargetOffset = Vector3.new(0, 0, 0)
			
			local N = 1
			repeat
				wait()
				Ball.Gui.Img.ImageColor3 = Color3.new(1, 1, 1):lerp(Color3.fromRGB(0, 177, 0), N)
				Ball.Gui.Img.Size = UDim2.new(N, 0, N, 0)
				N = N - 0.05
				
			until (Ball.Position - Attacker.HumanoidRootPart.Position).Magnitude < 3 or N < 0
			Ball:Destroy()
			
			PlaySound(1694173621, Attacker, 2)
			
			local HE, HL = game.ServerStorage.Storage.SoldierThings.HealingEmitter:Clone(), game.ServerStorage.Storage.SoldierThings.HealingLight:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(HE, 0.2) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(HL, 0.2)
			HE.Parent = Attacker.HumanoidRootPart
			HL.Parent = Attacker.HumanoidRootPart
						
			Attacker.Humanoid.Health = Attacker.Humanoid.Health + Num
			
		end)
	end
	
	
	if Enemy.PrimaryPart.Name ~= "HumanoidRootPart" then -- Only for buildings
		local Anim = PlayAnim(Anims["Shaman"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(320242032, Attacker, 0.5)
		DealDamage(Attacker, Enemy, 20)
		
		wait(0.6)
		
		
	elseif #CloseEnemies <= 3 or Attacker.Humanoid.Health < Attacker.Humanoid.MaxHealth * 0.25 then
		local Anim = PlayAnim(Anims["Shaman"][1], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		PlaySound(320242032, Attacker, 0.5)
		
		StealHealth(10, Enemy)
		DealDamage(Attacker, Enemy, 20)
		
		
		wait(0.6)
		
	-- The fire attack
	elseif #CloseEnemies <= 6 then
		local Anim = PlayAnim(Anims["Shaman"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.3, {Attacker}) == false then return end
		local Fire, Light = game.ServerStorage.Storage.SoldierThings.ShamanFireEmitter:Clone(), game.ServerStorage.Storage.SoldierThings.ShamanFireLight:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Fire, 5) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Light, 5)
		Fire.Parent = Attacker.Blade
		Light.Parent = Attacker.Blade
		
		PlaySound(490241055, Attacker, 0.5)
		if WaitTime(0.35, {Attacker}) == false then return end
		
		for i,v in pairs(EnemiesTable) do
			if v["Distance"] > 20 then break end
			local v = v["Character"].HumanoidRootPart
			
			delay(0, function()
				local F, FL, FS = game.ServerStorage.Storage.SoldierThings.FireEmitter:Clone(), game.ServerStorage.Storage.SoldierThings.FireLight:Clone(), game.ServerStorage.Storage.SoldierThings.FireSound:Clone()
				require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(F, 5) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(FL, 5) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(FS, 5)
				F.Parent = v
				FL.Parent = v
				FS.Parent = v
				FS:Play()
				
				require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, v.Parent, "Short")
				
				local SpeedChange = require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(v.Parent, 5)
				for w = 1, 10 do
					StealHealth(0.5, v.Parent)
					DealDamage(Attacker, v.Parent, 20, 10)
					wait(0.2)
				end
				
				
				SpeedChange:Destroy()
				F:Destroy()
				FL:Destroy()
				FS:Destroy()
			end)
		end
		
		wait(0.1)
		Fire:Destroy()
		Light:Destroy()
		wait(0.25)
		
	else
		local Anim = PlayAnim(Anims["Shaman"][3], Attacker)
		Anim:Play()
		
		if WaitTime(0.5, {Attacker}) == false then return end
		local Windy = game.ServerStorage.Storage.SoldierThings.Windy:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Windy, 4)
		Windy.Parent = Attacker
		
		delay(0, function()
			local Angle = CFrame.Angles(0, 0, 0)
			while Windy and Windy.Parent do
				Angle = Angle * CFrame.Angles(0, 0, math.rad(15))
				Windy:SetPrimaryPartCFrame(Attacker.Blade.CFrame * Angle)
				wait()
			end
		end)
		
		PlaySound(347194163, Attacker, 0.5)
		
		for w = 1, 8 do
			Windy["Wind"..w.."Top"].Transparency = 0.7
			Windy["Wind"..w.."Bottom"].Transparency = 0.7
			if w/2 == math.floor(w/2) then
				wait()
			end
		end
		
		for i,v in pairs(EnemiesTable) do
			if v["Distance"] > 20 then break end
			local v = v["Character"].HumanoidRootPart
			
			require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.Blade, v.Parent, "Medium", Attacker.PrimaryPart.CFrame - Attacker.PrimaryPart.Position)
			StealHealth(2.5, v.Parent)
			DealDamage(Attacker, v.Parent, 5)
		end
		
		for w = 1, 8 do
			Windy["Wind"..w.."Top"].Transparency = 1
			Windy["Wind"..w.."Bottom"].Transparency = 1
			if w/2 == math.floor(w/2) then
				wait()
			end
		end
		Windy:Destroy()
		
		wait(0.26)
	end
end





-- Scholar
function Functions.ScholarAttack(Attacker, Enemy, Distance, EnemiesTable)
	local Allies = {}
	local Injured = 0
	local ForceHeal = false
	
	if Attacker.Humanoid.Health < Attacker.Humanoid.MaxHealth * 0.7 then
		ForceHeal = true
	end
	
	local LowPos = Vector3.new(Attacker.PrimaryPart.Position.X - 40, Attacker.PrimaryPart.Position.Y - 40, Attacker.PrimaryPart.Position.Z - 40)
	local HighPos = Vector3.new(Attacker.PrimaryPart.Position.X + 40, Attacker.PrimaryPart.Position.Y + 40, Attacker.PrimaryPart.Position.Z + 40)
	local Region = Region3.new(LowPos, HighPos)
	
	for i,v in pairs(game.Workspace:FindPartsInRegion3(Region, nil, 10000)) do
		if v.Name == "HumanoidRootPart" then
			if v.Parent.Humanoid.Health > 0.123 then
				if TeamCheck(Attacker, v.Parent) == true then
					table.insert(Allies, v.Parent)
				end
			end
		end
	end
	
	
	for i,v in pairs(Allies) do
		if HealthCheck({v}) then
			if v.Humanoid.Health < v.Humanoid.MaxHealth * 0.95 then -- If their HP is lower than 95% then we mark them as injured
				Injured = Injured + 1
			end
		end
	end
	
	if ForceHeal or Injured > #Allies * 0.10 then -- If 10% or more are injuired heavily, heal everyone
		
		local Anim = PlayAnim(Anims["Scholar"][2], Attacker)
		Anim:Play()
		
		if WaitTime(0.4, {Attacker}) == false then return end
		
		local Ball = game.ServerStorage.Storage.SoldierThings.ScholarBallStrike:Clone()
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 5)
		Ball:SetPrimaryPartCFrame(Attacker.SmallBall.CFrame)
		Ball.Parent = Attacker
		
		delay(0, function()
			while Ball and Ball.Parent and HealthCheck({Attacker}) do
				Ball:SetPrimaryPartCFrame(Attacker.SmallBall.CFrame)
				wait()
			end
		end)
		if HealthCheck({Attacker}) == false then return end
		
		for w = 1, 5 do
			local NewTween = TS:Create(Ball.OuterBall, TweenInfo.new(3.1/5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(80, 80, 80), Transparency = 1})
			NewTween:Play()
			local NewTween = TS:Create(Ball.InnerBall, TweenInfo.new(3.1/5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(75, 75, 75), Transparency = 1})
			NewTween:Play()
			
			
			Ball.OuterBall.Size = Vector3.new(1, 1, 1)
			Ball.InnerBall.Size = Vector3.new(1, 1, 1)
			Ball.OuterBall.Transparency = 0.7
			Ball.InnerBall.Transparency = 0.7
			
			
			for i,v in pairs(Allies) do
				if HealthCheck({v}) then
					local ToHealth = nil
					if v == Attacker then -- He can heal himself better
						ToHealth = v.Humanoid.Health + 20 + Attacker.Stats.Variables.ExtraDamage.Value
					else
						ToHealth = v.Humanoid.Health + 5 + Attacker.Stats.Variables.ExtraDamage.Value
					end
					
					if ToHealth > v.Humanoid.MaxHealth then
						ToHealth = v.Humanoid.MaxHealth
					end
					
					PlaySound(1694173621, v, 2)
					
					local HE, HL = game.ServerStorage.Storage.SoldierThings.HealingEmitter:Clone(), game.ServerStorage.Storage.SoldierThings.HealingLight:Clone()
					require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(HE, 1) require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(HL, 1)
					HE.Parent = v.HumanoidRootPart
					HL.Parent = v.HumanoidRootPart
					
					
					local NewTween = TS:Create(v.Humanoid, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Health = ToHealth})
					NewTween:Play()
					
					delay(0, function()
						wait(0.4)
						HE.Enabled = false
						HL.Enabled = false
					end)
				end
			end
			
			wait(3.1/5)
		end
		
		wait(0.5)
		
	else
		if Distance < 10 or Enemy.PrimaryPart.Name ~= "HumanoidRootPart" then -- Close up hit by staff
			local Anim = PlayAnim(Anims["Scholar"][3], Attacker)
			Anim:Play()
			
			if WaitTime(0.3, {Attacker, Enemy}) == false then return end
			PlaySound(588697948, Attacker, 0.5)
			if WaitTime(0.2, {Attacker, Enemy}) == false then return end
			
			local Ball = game.ServerStorage.Storage.SoldierThings.ScholarBallStrike:Clone()
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Ball, 5)
			Ball:SetPrimaryPartCFrame(Attacker.SmallBall.CFrame)
			Ball.Parent = Attacker
			
			delay(0, function()
				while Ball and Ball.Parent do
					Ball:SetPrimaryPartCFrame(Attacker.SmallBall.CFrame)
					wait()
				end
			end)
			
			local NewTween = TS:Create(Ball.OuterBall, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(10, 10, 10), Transparency = 1})
			NewTween:Play()
			local NewTween = TS:Create(Ball.InnerBall, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {Size = Vector3.new(9, 9, 9), Transparency = 1})
			NewTween:Play()
			
			DealDamage(Attacker, Enemy, 10)
			
			wait(0.4)
			Ball:Destroy()
			wait(0.1)
			
		elseif Distance < 100 then -- Shoots little balls
			-- Here we avoid enemies that we shot already with our little balls
			Enemy = nil
			for w = 1, #EnemiesTable do
				if EnemiesTable[w]["Distance"] < 100 and EnemiesTable[w]["Character"]:FindFirstChild("MiniBall") == nil then
					Enemy = EnemiesTable[w]["Character"]
					break
				end
			end
			if Enemy == nil then return end
			
			
			local Anim = PlayAnim(Anims["Scholar"][1], Attacker)
			Anim:Play()
			
			if WaitTime(0.7, {Attacker, Enemy}) == false then return end
			PlaySound(192604675, Attacker, 0.5)
			if WaitTime(0.2, {Attacker, Enemy}) == false then return end
			local HalfPoint = Attacker["Right Arm"].Position:Lerp(Enemy.HumanoidRootPart.Position, 0.5)
			local Ball = game.ServerStorage.Storage.SoldierThings.MagicBall:Clone()
			Ball.CFrame = Attacker["Right Arm"].CFrame
			Ball.Parent = Attacker
			
			
			local NewTween = TS:Create(Ball, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = CFrame.new(HalfPoint), Size = Vector3.new(1.5, 1.5, 1.5)})
			NewTween:Play()
			wait(0.2)
			PlaySound(267602120, Enemy, 0.5)
			local NewTween = TS:Create(Ball, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = CFrame.new(HalfPoint), Size = Vector3.new(10, 10, 10), Transparency = 1})
			NewTween:Play()
			wait(0.1)
			
			
			PlaySound(1168586995, Enemy, 0.8)
			for w = 1, 5 do
				delay(0, function()
					local MiniBall = game.ServerStorage.Storage.SoldierThings.MiniBall:Clone()
					require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(MiniBall, 10)
					MiniBall.CFrame = Ball.CFrame
					MiniBall.Parent = Enemy
					
					local NewTween = TS:Create(MiniBall, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {CFrame = MiniBall.CFrame * CFrame.new(math.random(-5, 5), math.random(-5, 5), math.random(-5, 5))})
					NewTween:Play()
					if WaitTime(0.2, {Attacker, Enemy}) == false then return end
					
					local NewTween = TS:Create(MiniBall, TweenInfo.new(0.3, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.HumanoidRootPart.CFrame})
					NewTween:Play()
					if WaitTime(0.3, {Attacker, Enemy}) == false then return end
					local Angle = CFrame.Angles(math.rad(math.random(1, 360)), math.rad(math.random(1, 360)), math.rad(math.random(1, 360)))
					
					for e = 1, 50 do
						DealDamage(Attacker, Enemy, 15, 5 * 50) -- BaseDamage & NumOfBalls * SpinCount
						Angle = Angle * CFrame.Angles(math.rad(30), 0, 0)
						local NewTween = TS:Create(MiniBall, TweenInfo.new(0.03, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out, 0, false, 0), {CFrame = Enemy.HumanoidRootPart.CFrame * (Angle) * CFrame.new(0, 0, 5)})
						NewTween:Play()
						if WaitTime(0.03, {Attacker, Enemy}) == false then break end
					end
					MiniBall:Destroy()
				end)
			end
			Ball:Destroy()
			
			wait(0.3)
		end
	end
end



-------------------------------------------------------------------------------
-------------------------------- ORCS -----------------------------------------
-------------------------------------------------------------------------------


-- Goblin Archer
function Functions.GoblinArcherAttack(Attacker, Enemy)
local Num = math.random(1, #GoblinArcherAttackAnims)
	local Anim = PlayAnim(GoblinArcherAttackAnims[Num][1], Attacker)
	Anim:Play()
	
	wait(GoblinArcherAttackAnims[Num][3]) -- Wait until we can play the sound
	
	if Attacker.Parent ~= game.Workspace then -- If attacker exists then play sound and dmg
		PlaySound(GoblinArcherAttackAnims[Num][2], Attacker, 0.5)
	
		if Enemy.Parent ~= nil and Enemy.PrimaryPart ~= nil then -- If enem still exists then shoot at him
			local Hit, Pos = nil, nil
			local Ray1 = Ray.new(Attacker.Bow.Position, (CFrame.new(Attacker.Bow.Position, Enemy.PrimaryPart.Position)).lookVector.unit * 999)
			
			if Attacker.Stats.Variables.Mode.Value == "Assigned" then
				Hit, Pos = game.Workspace:FindPartOnRayWithIgnoreList(Ray1, {game.Workspace.Areas, Attacker.Parent.Parent}) -- Neccessary for tower arachers
			else
				Hit, Pos = game.Workspace:FindPartOnRayWithIgnoreList(Ray1, {Attacker.Parent.Parent})
			end
			 
		
			local A = game.ServerStorage.Storage.ArrowPart:Clone()
			A.CFrame = Attacker.Bow.CFrame
			A.Parent = Attacker
			wait(0.03)
			A.CFrame = CFrame.new(Pos)
			require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(A, 1)
			
			if Hit then
				local HitModel, HitType = require(game.ReplicatedStorage.ReplicatedUtilities).CheckAlivity(Hit)
			
				if HitModel then
					TeamCheck(Attacker, HitModel, GoblinArcherAttackAnims[Num][4])
				end
			end
		end
	end
	wait(Anim.Length - GoblinArcherAttackAnims[Num][3])
end


-- Goblin
function Functions.GoblinAttack(Attacker, Enemy)
	local Num = math.random(1, #GoblinAttackAnims)
	local Anim = PlayAnim(GoblinAttackAnims[Num][1], Attacker)
	Anim:Play()
	
	wait(GoblinAttackAnims[Num][3]) -- Wait until we can play the sound
	
	if Attacker.Parent ~= game.Workspace then -- Play sound and dmg if attacker exists
		PlaySound(GoblinAttackAnims[Num][2], Attacker, 0.15)
		PlaySound(225698315, Attacker, 1)
		DealDamage(Attacker, Enemy, GoblinAttackAnims[Num][4])
	end
	wait(Anim.Length - GoblinAttackAnims[Num][3])
end

-- Goblin Chief
function Functions.GoblinChiefAttack(Attacker, Enemy)
	if math.random(1, 5) == 1 then -- Rocks crumbling
		local Anim = PlayAnim(GoblinChiefAttackAnims[1], Attacker)
		Anim:Play()
		PlaySound(746451203, Attacker, 1)
		wait(1.5)
		Attacker.Sword.Trail.Enabled = true
		PlaySound(162271116, Attacker, 1)
		wait(0.25)
		PlaySound(134854740, Attacker, 1)
		game.ServerStorage.Storage.SoldierThings.MudCreator.MudPath.CFrame = Attacker.HumanoidRootPart.CFrame + Attacker.HumanoidRootPart.CFrame.lookVector * 15 + Vector3.new(0, -4, 0)
		game.ServerStorage.Storage.SoldierThings.MudCreator:Clone().Parent = game.Workspace
		wait(0.75)
		Attacker.Sword.Trail.Enabled = false
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 33)
		end
		
	else
		local Anim = PlayAnim(GoblinChiefAttackAnims[math.random(2,3)], Attacker)
		Anim:Play()
		PlaySound(413688287, Attacker, 1)
		if Enemy:FindFirstChild("Humanoid") then -- Attack if enemy exists
			require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "Really Short")
		end
		DealDamage(Attacker, Enemy, 18)
		wait(1.25)
	end
end

-- Orc
function Functions.OrcAttack(Attacker, Enemy)
	local Num = math.random(1, #OrcAttackAnims)
	local Anim = PlayAnim(OrcAttackAnims[Num][1], Attacker)
	Anim:Play()
	
	wait(OrcAttackAnims[Num][3]) -- Wait until we can play the sound
	
	if Attacker.Parent ~= game.Workspace then -- Play sound and dmg if attacker exists
		PlaySound(OrcAttackAnims[Num][2], Attacker, 0.5)
		PlaySound(225698315, Attacker, 1)
		DealDamage(Attacker, Enemy, OrcAttackAnims[Num][4])
	end
	wait(Anim.Length - OrcAttackAnims[Num][3])
end

-- Uruk-hai
function Functions.UrukhaiAttack(Attacker, Enemy)
	local Num = math.random(1, 3)
	if Num == 1 then -- Slash
		local Anim = PlayAnim(UrukhaiAttackAnims[1], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(225698315, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 13)
		end
		wait(1)
		
	elseif Num == 2 then
		local Anim = PlayAnim(UrukhaiAttackAnims[2], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(344936319, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 9)
		end
		wait(1)
		
	elseif Num == 3 and Enemy:FindFirstChild("Humanoid") then
		local Anim = PlayAnim(UrukhaiAttackAnims[3], Attacker)
		Anim:Play()
		wait(1)
		PlaySound(2801263, Attacker, 1)
		wait(0.6)
		PlaySound(392337442, Attacker, 1)
		wait(0.5)
		require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "None")
		DealDamage(Attacker, Enemy, 17)
		wait(1)
	end
end

-- Volatile
function Functions.VolatileAttack(Attacker, Enemy)
	local Num = math.random(1, 3)
	if Num == 1 then -- Slash
		local Anim = PlayAnim(VolatileAttackAnims[1], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(2227417121, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 29)
		end
		wait(1)

	elseif Num == 2 then
		local Anim = PlayAnim(VolatileAttackAnims[2], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(2227417121, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 30)
		end
		wait(1)

	elseif Num == 3 and Enemy:FindFirstChild("Humanoid") then
		local Anim = PlayAnim(VolatileAttackAnims[3], Attacker)
		Anim:Play()
		wait(1)
		PlaySound(2227417121, Attacker, 1)
		wait(0.6)
		PlaySound(8348697790, Attacker, 1)
		wait(0.5)
		require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "None")
		DealDamage(Attacker, Enemy, 35)
		wait(1)
	end
end


-- Frostbite Uruk
function Functions.FrostbiteUrukAttack(Attacker, Enemy)
	local Num = math.random(1, 3)
	if Num == 1 then -- Slash
		local Anim = PlayAnim(FrostbiteUrukAttackAnims[1], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(225698315, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 35)
		end
		wait(1)

	elseif Num == 2 then
		local Anim = PlayAnim(FrostbiteUrukAttackAnims[2], Attacker)
		Anim:Play()
		wait(0.6)
		PlaySound(344936319, Attacker, 1)
		if Enemy.Parent ~= nil and Attacker.Parent ~= game.Workspace then
			DealDamage(Attacker, Enemy, 30)
		end
		wait(1)

	elseif Num == 3 and Enemy:FindFirstChild("Humanoid") then
		local Anim = PlayAnim(FrostbiteUrukAttackAnims[3], Attacker)
		Anim:Play()
		wait(1)
		PlaySound(2801263, Attacker, 1)
		wait(0.6)
		PlaySound(392337442, Attacker, 1)
		wait(0.5)
		require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "None")
		DealDamage(Attacker, Enemy, 30)
		wait(1)
	end
end
	
-- Ogre
function Functions.OgreAttack(Attacker, Enemy, Distance, EnemiesTable)
	
	-- If the ogre sees a player
	if game.Players:GetPlayerFromCharacter(Enemy) and Distance > 30 then
		local Anim = PlayAnim(OgreAttackAnims[3], Attacker)
		Anim:Play()
		if WaitTime(0.1, {Attacker}) == false then return end
		Attacker["Head Folder"]["Eyes"]["Left Iris"].Material = Enum.Material.Neon
		Attacker["Head Folder"]["Eyes"]["Left Iris"].BrickColor = BrickColor.new("Really red")
		Attacker["Head Folder"]["Eyes"]["Right Iris"].Material = Enum.Material.Neon
		Attacker["Head Folder"]["Eyes"]["Right Iris"].BrickColor = BrickColor.new("Really red")
		Attacker.HumanoidRootPart.Marching.PlaybackSpeed = 2
		Attacker.HumanoidRootPart.Marching.Volume = 5
		if WaitTime(0.35, {Attacker, Enemy}) == false then return end
		PlaySound(1412892742, Attacker, 0.8) -- Yell
		if WaitTime(2.55, {Attacker, Enemy}) == false then return end
		
		local Anim = PlayAnim(OgreAttackAnims[4], Attacker)
		Anim:Play()
		local SpeedChange = require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Attacker, 30)
		
		local LeftRight = -3
		for w = 1, 13 do
			if (Attacker.HumanoidRootPart.Position - Enemy.HumanoidRootPart.Position).Magnitude < 12 then
				Anim:Stop()
				
				local Anim = PlayAnim(OgreAttackAnims[5], Attacker)
				Anim:Play(0.2)
				if WaitTime(0.4, {Attacker, Enemy}) == false then return end
				
				if (Attacker.HumanoidRootPart.Position - Enemy.HumanoidRootPart.Position).Magnitude < 12 then
					
					delay(0, function()
						Enemy.UpperTorso.Anchored = true

						local S = time()
						repeat
							Enemy.UpperTorso.CFrame = Attacker["Left Arm Folder"]["Left Hand"].CFrame * CFrame.new(-1.04568386, 0.199525356, 0.701058388, 0.807945371, 0.139148936, -0.572595417, -0.306846023, -0.730230093, -0.610420287, -0.503065705, 0.668884754, -0.547285914)
							wait()
						until time() - S >= 1.2
						
						Enemy.UpperTorso.Anchored = false
					end)
					
					
					if WaitTime(0.1, {Attacker, Enemy}) == false then return end
					PlaySound(179760759, Attacker, 2) -- Bone crack
					if WaitTime(0.650, {Attacker, Enemy}) == false then return end
					PlaySound(358379874, Attacker, 1) -- Hit
					require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "Really Short")
					require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy:FindFirstChild("Head"))
					require(game.ServerStorage.Storage.Scripts.Utilities).CamShake(Attacker.HumanoidRootPart.Position, 1, 60, {game.Players[Enemy.Name]})
					if WaitTime(0.250, {Attacker, Enemy}) == false then return end
					DealDamage(Attacker, Enemy, 99)
					if WaitTime(0.25, {Attacker, Enemy}) == false then return end
					
				else
					Anim:Stop()
				end
				
				break
			else
				Attacker.Humanoid:MoveTo(Enemy["HumanoidRootPart"].Position)
				LeftRight = -LeftRight
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeSmoke(Attacker.HumanoidRootPart.CFrame + Vector3.new(LeftRight, -5, 0))
			end
			if WaitTime(0.4, {Attacker, Enemy}) == false then return end
		end
		
		

			
			
		SpeedChange:Destroy()
		Anim:Stop()
		Attacker.HumanoidRootPart.Marching.PlaybackSpeed = 0.91
		Attacker.HumanoidRootPart.Marching.Volume = 3
		Attacker["Head Folder"]["Eyes"]["Left Iris"].Material = Enum.Material.Plastic
		Attacker["Head Folder"]["Eyes"]["Left Iris"].BrickColor = BrickColor.new("Fawn brown")
		Attacker["Head Folder"]["Eyes"]["Right Iris"].Material = Enum.Material.Plastic
		Attacker["Head Folder"]["Eyes"]["Right Iris"].BrickColor = BrickColor.new("Fawn brown")
		
	elseif Distance <= 10 then
		
		local SpeedChange = require(game.ServerStorage.Storage.Scripts.Utilities).SetWalkSpeed(Attacker, 0)
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(SpeedChange, 5)
		
		if Enemy.PrimaryPart.Name == "HumanoidRootPart" then
			if Random.new():NextInteger(1, 2) == 1 then
				local Anim = PlayAnim(OgreAttackAnims[1], Attacker)
				Anim:Play()
				
				PlaySound(1981260417, Attacker, 0.8) -- Growl
				if WaitTime(0.9, {Attacker}) == false then return end
				PlaySound(2022755988, Attacker, 0.5) -- Hit
				if WaitTime(0.35, {Attacker, Enemy}) == false then return end
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeDirt((Attacker["Right Arm Folder"].Club.CFrame * CFrame.new(0.0498070717, -7.00950623e-05, 3.40000176, 8.70204531e-09, 1.0000025, -0.000321938976, -1.22189522e-06, 0.000321989413, 1.00000226, 1.00000012, -3.86535248e-12, -2.98023224e-08)).p)
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy.PrimaryPart)
				require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "None")
				require(game.ServerStorage.Storage.Scripts.Utilities).CamShake(Attacker.HumanoidRootPart.Position, 0.5, 50)
				DealDamage(Attacker, GetEnemiesWithinDistance(EnemiesTable, 10, 2), 45)
				if WaitTime(0.85, {Attacker, Enemy}) == false then return end
				
			else
				local Anim = PlayAnim(OgreAttackAnims[2], Attacker)
				Anim:Play()
				
				PlaySound(834513742, Attacker, 0.5) -- Growl
				if WaitTime(0.8, {Attacker, Enemy}) == false then return end
				PlaySound(2022755988, Attacker, 0.5) -- Hit
				require(game.ServerStorage.Storage.Scripts.Utilities).MakeBlood(Enemy.PrimaryPart)
				require(game.ServerStorage.Storage.Scripts.Utilities).Knockback(Attacker.PrimaryPart, Enemy, "None")
				require(game.ServerStorage.Storage.Scripts.Utilities).CamShake(Attacker.HumanoidRootPart.Position, 0.3, 50)
				DealDamage(Attacker, GetEnemiesWithinDistance(EnemiesTable, 10, 4), 30)
				if WaitTime(0.95, {Attacker, Enemy}) == false then return end
			end
		
		-- Dmg dealing to buildings
		else
			local Anim = PlayAnim(OgreAttackAnims[1], Attacker)
			Anim:Play()
			
			PlaySound(1981260417, Attacker, 0.8) -- Growl
			if WaitTime(0.9, {Attacker}) == false then return end
			PlaySound(2022755988, Attacker, 0.5) -- Hit
			if WaitTime(0.35, {Attacker, Enemy}) == false then return end
			require(game.ServerStorage.Storage.Scripts.Utilities).MakeDirt((Attacker["Right Arm Folder"].Club.CFrame * CFrame.new(0.0498070717, -7.00950623e-05, 3.40000176, 8.70204531e-09, 1.0000025, -0.000321938976, -1.22189522e-06, 0.000321989413, 1.00000226, 1.00000012, -3.86535248e-12, -2.98023224e-08)).p)
			require(game.ServerStorage.Storage.Scripts.Utilities).CamShake(Attacker.HumanoidRootPart.Position, 0.5, 50)
			DealDamage(Attacker, {Enemy}, 45)
			wait(0.85)
		end
			
		SpeedChange:Destroy()
		
	else
		if HealthCheck({Attacker, Enemy}) then
			Attacker.Humanoid:MoveTo(Enemy.PrimaryPart.Position)
		end
	end

end

-------------------------------------------------------------------------------
-------------------------------- END -----------------------------------------
-------------------------------------------------------------------------------		
		
function HealthCheck(NpcTable)
	
	for i,NPC in pairs(NpcTable) do
		local HpCheck = false
		
		if NPC and NPC.Parent and NPC:IsDescendantOf(game.Workspace) and NPC.ClassName == "Model" and NPC.PrimaryPart then
			if NPC.PrimaryPart.Name == "ClickPart" then
				if NPC.Stats.MyHealth.Value > 0 then
					HpCheck = true
				end
			elseif NPC:FindFirstChild("HumanoidRootPart") and NPC:FindFirstChild("Humanoid") and NPC.Humanoid.Health > 0 then
				HpCheck = true
			end
		end
		
		if HpCheck == false then
			return false
		end
	end
		
	return true
end


function WaitTime(Time, NPCs)
	wait(Time)
	for i,v in pairs(NPCs) do
		if HealthCheck({v}) == false then
			return false
		end
	end
	return true
end

function DealDamage(Attacker, EnemyTable, BaseDamage, Divider)
	if typeof(EnemyTable) ~= "table" then
		EnemyTable = {EnemyTable}
	end
	
	for i, Enemy in pairs(EnemyTable) do
		if Enemy and Enemy.Parent ~= nil then
			local Dmg = BaseDamage + Attacker.Stats.Variables.ExtraDamage.Value
			if Divider then Dmg = Dmg/Divider end
			
			
			if Enemy:FindFirstChild("Humanoid") and Enemy.Humanoid.Health > 0 then
				if Enemy.Humanoid.Health - Dmg <= 0 then -- If we killed him
					if Enemy:FindFirstChild("SelectedPart") == nil then -- Can only get kills with orcs
						Attacker.Stats.Variables.Damage.Value = Attacker.Stats.Variables.Damage.Value + Enemy.Humanoid.Health
						HandleKills(Attacker.Parent.Name, Attacker)
					end
					-- If we killed a player, then let's make their dead animation.
					if game.Players:GetPlayerFromCharacter(Enemy) then
						Enemy.Humanoid.Health = 0.123
						return
					end
				else
					if Enemy:FindFirstChild("SelectedPart") == nil then -- Can only get dmg with orcs
						Attacker.Stats.Variables.Damage.Value = Attacker.Stats.Variables.Damage.Value + Dmg
					end
				end
				
				Enemy.Humanoid:TakeDamage(Dmg)
				
			elseif Enemy:FindFirstChild("ClickPart") then -- Damage the building
				Enemy.Stats.MyHealth.Value = Enemy.Stats.MyHealth.Value - (Dmg)
			end
		end
	end
end



local Badges = {
	[10] = 1365167726;
	[100] = 1365170910;
	[1000] = 1365171666;
	[10000] = 1379812762;
	[50000] = 1379813957;
	[100000] = 1379814383;
	[250000] = 1379814587;
}

function HandleKills(OwnerName, Attacker)
	if OwnerName ~= "Workspace" then
		if OwnerName ~= "Orc" then -- If a human killed someone
			game.Players[OwnerName].leaderstats.Kills.Value = game.Players[OwnerName].leaderstats.Kills.Value + 1
			if Badges[game.Players[OwnerName].leaderstats.Kills.Value] then
				game:GetService("BadgeService"):AwardBadge(game.Players[OwnerName].UserId, Badges[game.Players[OwnerName].leaderstats.Kills.Value])
			end
		end
		
		Attacker.Stats.Variables.Kills.Value = Attacker.Stats.Variables.Kills.Value + 1
		if Attacker.Stats.Variables.Kills.Value == 900 then
			Attacker.Stats.Variables.Rank.Value = 3
			Attacker.Head.RankLabel.RankImage.Image = "rbxassetid://1214341976"
			require(game.ServerStorage.Storage.Scripts.HandleSoldierStats).HandleStats(Attacker)
		elseif Attacker.Stats.Variables.Kills.Value == 300 then
			Attacker.Stats.Variables.Rank.Value = 2
			Attacker.Head.RankLabel.RankImage.Image = "rbxassetid://1214341858"
			require(game.ServerStorage.Storage.Scripts.HandleSoldierStats).HandleStats(Attacker)
		elseif Attacker.Stats.Variables.Kills.Value == 100 then
			Attacker.Stats.Variables.Rank.Value = 1
			Attacker.Head.RankLabel.RankImage.Image = "rbxassetid://1214341764"
			require(game.ServerStorage.Storage.Scripts.HandleSoldierStats).HandleStats(Attacker)
		end
	end
end



function TeamCheck(Attacker, HitNpc, Damage, Divider)
	-- By default a team cannot attack itself VVVVV
	-- If Im orc, I can attack anyone
	-- If im wanderer I can only attack orcs
	-- Im clan member I can only attack other clans and orcs
	
	local AttackClan = Attacker.Parent.Parent.Name
	local HitClan = nil
	if HitNpc and HitNpc.Parent then
		if HitNpc:FindFirstChild("SelectedPart") then -- Human soldiers
			HitClan = HitNpc.Parent.Parent.Name
		
		elseif HitNpc:FindFirstChild("ClickPart") then -- Buildings
			HitClan = HitNpc.Stats.Owner.Value.Name
			
		elseif HitNpc:FindFirstChild("Humanoid") and HitNpc.PrimaryPart and HitNpc.PrimaryPart.Name == "HumanoidRootPart" then -- Orcs & Players
			if HitNpc:FindFirstChild("Stats") then
				HitClan = "Orcs"
			elseif game.Players:FindFirstChild(HitNpc.Name) then -- Making sure it's not a horse lol
				HitClan = game.Players[HitNpc.Name].Team.Name
			end
		end
		
		if AttackClan ~= HitClan then
			if AttackClan == "Orcs" or AttackClan == "Wanderers" and HitClan == "Orcs" or AttackClan ~= "Wanderers" and HitClan ~= "Wanderers" then
				if Damage then
					DealDamage(Attacker, HitNpc, Damage, Divider)
				else
					return false
				end
			end
		end
	end
	
	return true

	
	
--	
--	if HitNpc and HitNpc.Parent then
--		if HitNpc:FindFirstChild("SelectedPart") then -- Human soldiers
--			print("Human")
--			if Attacker.Parent.Parent.Name ~= "Wanderers" and HitNpc.Parent.Parent.Name == "Orcs" or HitNpc.Parent.Parent.Name ~= "Wanderers" and HitNpc.Parent.Parent ~= Attacker.Parent.Parent then -- Are they on the same team
--				if Damage then
--					DealDamage(Attacker, HitNpc, Damage, Divider)
--				else
--					return false
--				end
--			end
--		elseif HitNpc:FindFirstChild("ClickPart") then -- Buildings
--			if Attacker.Parent.Parent.Name == "Wanderers" and HitNpc.Stats.Owner.Value == nil or HitNpc.Stats.Owner.Value ~= game.Teams.Wanderers and HitNpc.Stats.Owner.Value.Name ~= Attacker.Parent.Parent.Name then
--				if Damage then
--					DealDamage(Attacker, HitNpc, Damage, Divider)
--				else
--					return false
--				end
--			end
--		elseif HitNpc:FindFirstChild("Humanoid") and HitNpc.PrimaryPart and HitNpc.PrimaryPart.Name == "HumanoidRootPart" then -- Orcs & Players
--			if HitNpc:FindFirstChild("Stats") then
--				if Damage then
--					DealDamage(Attacker, HitNpc, Damage, Divider) -- Orcs
--				else
--					return false
--				end
--			elseif game.Players:FindFirstChild(HitNpc.Name) then -- Making sure it's not a horse lol
--				if Attacker.Parent.Parent.Name ~= "Wanderers" and game.Players[HitNpc.Name].Team.Name ~= "Wanderers" and game.Players[HitNpc.Name].Team.Name ~= Attacker.Parent.Parent.Name then
--					if Damage then
--						DealDamage(Attacker, HitNpc, Damage, Divider) -- Enemy player
--					else
--						return false
--					end
--				end
--			end
--		end
--		
--		return true
--	end
end

function PlayAnim(ID, Attacker)
	if Attacker:FindFirstChild("Humanoid") then
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..ID
		Anim.Parent = Attacker.Humanoid
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Anim, 5)
		Anim = Attacker.Humanoid:LoadAnimation(Anim)
		return Anim
	else
		return nil
	end
end

function PlaySound(ID, Attacker, Volume)
	local Sound = Instance.new("Sound")
	Sound.SoundId = "rbxassetid://"..ID
	Sound.Volume = Volume
	Sound.Parent = Attacker:FindFirstChild("HumanoidRootPart") or Attacker
	Sound:Play()
	require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Sound, 2)
end

-- Checks collision when a soldier throws a spear, or an archers shoots an arrow
function CheckCollision(Attacker, Enemy, Object, IgnoreList, Sticky, Damage, BuildingDamage, SoundId)
	local PrimaryPart = Object.PrimaryPart
	
	local Ray1 = Ray.new(PrimaryPart.Position, (PrimaryPart.CFrame - PrimaryPart.Position).lookVector.unit * 20)
	local Hit, Pos = game.Workspace:FindPartOnRayWithIgnoreList(Ray1, IgnoreList)
	
	if Hit and Hit:IsDescendantOf(game.Workspace) then
		if Sticky == "Sticky" then			
			Object:SetPrimaryPartCFrame((PrimaryPart.CFrame - PrimaryPart.CFrame.p) + Pos)
			
			require(game.ServerStorage.Storage.Scripts.Utilities).Weld(Object)
			require(game.ServerStorage.Storage.Scripts.Utilities).Weld(Hit, PrimaryPart)
			if PrimaryPart:FindFirstChildOfClass("Trail") then
				require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(PrimaryPart:FindFirstChildOfClass("Trail"), 0.03)
			end
		else
			Object:Destroy()
		end
		
		local HitModel, HitType = require(game.ReplicatedStorage.ReplicatedUtilities).CheckAlivity(Hit)
		
		if HitModel then
			if HitType == "Npc" or HitType == "Player" then
				PlaySound(SoundId, Hit, 0.5)
				if HitModel == Enemy then
					DealDamage(Attacker, Enemy, Damage)
				else
					TeamCheck(Attacker, HitModel, Damage)
				end
				
			elseif BuildingDamage then
				if HitModel == Enemy then
					DealDamage(Attacker, Enemy, Damage)
				else
					TeamCheck(Attacker, HitModel, Damage)
				end
			end
		end
		
		return true
	end
end
-- if hit npc is the enemy, then no team check. if the last arrow was cframed, then we can be sure it hit the enemy


-- Part, Starting CFrame, Ending CFrame, Control, length
function ShootArrow(Attacker, Enemy, ArrowName, Start, MinRandom, MaxRandom, IgnoreList, Sticky, Damage, DamageBuildings, Control, Percent, HitSound)
	delay(0, function()	
		local Arrow = game.ServerStorage.Storage.SoldierThings[ArrowName]:Clone()
		
		require(game.ReplicatedStorage.ReplicatedUtilities).DebrisAddItem(Arrow, 30)
		Arrow.Parent = Attacker
		if Enemy.PrimaryPart == nil then return end
		Arrow:SetPrimaryPartCFrame(CFrame.new(Start, Enemy.PrimaryPart.Position))
		
		local RandomNum = MaxRandom == 0 and Vector3.new() or Vector3.new(math.random(MinRandom, MaxRandom), math.random(MinRandom, MaxRandom), math.random(MinRandom, MaxRandom))
		for w = Percent, 100, Percent do
			if Enemy.PrimaryPart == nil then return end
			if CheckCollision(Attacker, Enemy, Arrow, IgnoreList, Sticky, Damage, DamageBuildings, HitSound) then return end
			local Percent = w/100 if Percent > 100 then Percent = 100 end
			local ToPos = CFrame.new((1-Percent)^2 * Start + 2 * (1-Percent) * Percent * Control + Percent^2 * (Enemy.PrimaryPart.Position + RandomNum))
			local Angle = CFrame.new(Arrow.PrimaryPart.Position, ToPos.p)
			Arrow:SetPrimaryPartCFrame(ToPos * (Angle - Angle.p))
			wait(0.03)
		end
		Arrow:Destroy()
	end)
end

-- returns the enemies within the given range
function GetEnemiesWithinDistance(EnemiesTable, Distance, MaxCount)
	local WorkTable = {}
	for i,v in pairs(EnemiesTable) do
		if v["Distance"] <= Distance then
			table.insert(WorkTable, v["Character"])
			if MaxCount and #WorkTable == MaxCount then
				break
			end
		else
			break
		end
	end
	
	return WorkTable
end

return Functions
